1. 执行操作符 `` php会试着将反向单引号之间的命令当作服务器命令行命令来执行
 ex.   $out = `dir c:`; 
       echo '<pre>'.$out.'</pre>';
2.echo 与 print 区别
  echo 速度快  print 将返回一个值 1
3.isset() unset() empty()
4.gettype()  settype()
5.变量的重解释（类型转换）
6.fopen()文件模式
7.nl2br() 将\n解析为<br />
8.复遍历数组需要 reset($array);
9. foreach(list($arg....) = each($array)) //each()已被弃用
   foreach($array as $key => $value) 
10. myfunction(value, key, userdata.....) 数组适配的策略前两个参数必定是value和key，
    后面的参数根据调用函数对应参数
    array_walk(array arr, callable func, [, mixed userdata]);
11.extract($array) 可将非数字索引数组转换为一系列变量  
   对于每个键值对 key => value
   转换为变量     $key = value
   extract($array,extract_type,string) baidu查用法
12.htmlspecialchars()
13.strtoupper() strtolower() ucfirst() ucwords()
14.explode() implode() 拆分 联合
15.strcmp() strcasecmp() strnatcmp() 比较
16.strstr() strchr() strrchr() stristr() 查找子串，返回的是字符串
17.strpos() strrpos() 查找子串 返回位置 找不到则返回false 为避免与0冲突 用 === 检测
18.str_replace() 查找替换 substr()_replace()范围替换

正则表达：
19.回溯引用
20.int preg_match(string pattern, string subject[, array matches [, int flag = 0 [, int offset = 0]]])
       是否匹配        正则模板        被搜索字符流    匹配结果数组     设置匹配数组模式     开始搜索位置

php函数
21.php函数不区分大小写
22.匿名函数function ($value) use($arg) {} 配合 array_walk()函数可实现强大的数组操作

类
22.Trait    insteadof
23.final关键字禁止继承与覆盖
24.$b = new class()
25.访问器函数 __get()  __set()
26.$obj instanceof class 检查类类型
27.延迟静态绑定
   静态调用时::符号左侧的部分的的绑定是延迟，也就是说不再被解析为定义当前方法所在的类，而是在实际运行时计算的
   延迟静态绑定指的是在父类中获取子类的最终状态。在父类中，如果出现self关键字，被子类继承后，这个self值的还是父类而不是子类。
   如果在父类中出现了self关键字，并且子类继承了含有self的这段代码，那么需要考虑静态延迟绑定。在父类中使用static代替self.
28.$c = clone $b  对象克隆
   __clone()  可以理解为C++中的拷贝构造函数
29.abstract class{}  abstract function... 抽象类 抽象方法 任何包含抽象方法的类本身必须是抽象类
30.__call()  __callStatic()  实现一定意义上的重载功能
31.__autoload() 主要用于尝试引入特定文件，而又需要该文件来初始化所需要类
32.生成器 定义时像函数，运行时像迭代器 用yield返回值 
          与函数不同的是函数会将所有可能值一次性填充 而生成器是一次只有一个值创建并保存到内存中
       需要注意的是，生成器将保持状态，也就是，在外部foreach()循环的下一次迭代中，生成器将从上次执行结束位置继续执行
function myGenerator()
{
    yield 'value1';
    yield 'value2';
    yield 'value3';
}
 
foreach (myGenerator() as $yieldedValue) {
    echo $yieldedValue . PHP_EOL;
}
将输出$value1 value2 value3
对于生成器的使用 多查查相关资料
33.__toString()
34.反射API 参考reflection.php
35.namespace  
   名称空间 子名称空间 相对子名称空间 全局名称空间
36.use语句
   use bob\html\page as www;
   $services = www\Page();   //等价于 bob\html\page\Page()
